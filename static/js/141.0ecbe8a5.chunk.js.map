{"version":3,"file":"static/js/141.0ecbe8a5.chunk.js","mappings":"mUA6EA,UA/Da,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAAkCR,EAAAA,EAAAA,WAAS,GAA3C,eAAOS,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,+GAE0BC,EAAAA,KAF1B,gBAEUL,EAFV,EAEUA,OACPC,EAAUD,GAHb,gDAKGM,EAAAA,GAAAA,KAAA,sCALH,gEAAD,KAQC,IACHD,EAAAA,GAAAA,KAAwBP,GACxBM,EAAAA,EAAAA,YAAU,YACN,iBAAC,4GAEOD,GAAa,GAFpB,SAG+BE,EAAAA,GAAcA,EAAAA,IAH7C,uBAGcE,EAHd,EAGcA,QACDC,GAAYC,EAAAA,EAAAA,GAAUF,EAASP,GAJ5C,SAKoCK,EAAAA,KALpC,gBAKiBK,EALjB,oBAMOb,GAAe,OAAIa,EAAUH,UAE3BZ,EADU,IAATG,GACS,OAAIU,GAEJ,SAACG,GAAD,wBAAmBA,IAAnB,OAAgCH,MAVnD,kDAYSF,EAAAA,GAAAA,KAAA,sCAZT,yBAakBH,GAAa,GAb/B,oFAAD,KAeF,CAACH,EAAQF,IAMX,OACE,UAAC,IAAD,WACGI,IAAa,SAAC,KAAD,CAAWU,MAAM,UAAUC,OAAQ,GAAIC,MAAO,MAC5D,UAAC,IAAD,WAC0B,IAAvBlB,EAAYmB,SACX,iCACE,SAAC,IAAD,wBACA,SAAC,IAAD,CAAQrB,OAAQE,OAED,IAAlBF,EAAOqB,SACN,iCACE,SAAC,IAAD,wBACA,SAAC,IAAD,CAAerB,OAAQA,QAEzBQ,GAAaR,EAAOqB,QAAU,KAC9B,SAAC,IAAD,CAAQC,QAnBO,WACrBjB,GAAQ,SAAAD,GAAI,OAAIA,EAAO,MAkBgBmB,MAAM,SAAC,MAAD,IAAvC","sources":["pages/HomePage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { toast } from 'react-toastify';\nimport { ThreeDots } from  'react-loader-spinner';\nimport { TiArrowSync } from \"react-icons/ti\";\nimport * as API from 'api';\nimport { dataMovie } from \"utils/dataMovie\";\nimport { MoviesGallery } from \"components/MoviesGallery\";\nimport { Container } from \"components/ui/Container\";\nimport { Section } from \"components/ui/Section\";\nimport { Button } from \"components/ui/buttons\";\nimport { Slider } from \"components/Swiper\";\nimport { Title } from \"components/ui/Title\";\n\n\nconst Home = () => {\nconst [movies, setMovies] = useState([]);\nconst [swipeMovies, setSwipeMovies] = useState([]);\nconst [page, setPage] = useState(1);\nconst [genres, setGenres] = useState([]);\nconst [isLoading, setIsLoading] = useState(false);\n\nuseEffect(() => {\n  (async () => {\n    try {\n      const {genres} = await API.getGenres();\n      setGenres(genres);\n    } catch (error) {\n      toast.info(`Something went wrong ${error}`);\n    };\n  })();\n}, []);\nAPI.searchParams.page = page;\nuseEffect(() => {\n    (async () => {      \n        try {           \n            setIsLoading(true);\n            const {results} = await API.getTrends(API.searchParams);\n            const newMovies = dataMovie(results, genres);\n            const {...swipeData} = await API.getUpcoming();\n            setSwipeMovies([...swipeData.results]);\n            if(page === 1){\n              setMovies([...newMovies]);\n            } else {\n              setMovies((prevState) => [...prevState,...newMovies]);}       \n            } catch (error) {\n              toast.info(`Something went wrong ${error}`);\n            } finally {setIsLoading(false)};\n    })();\n},[genres, page]);\n\nconst handleLoadMore = () => {\n  setPage(page => page + 1);\n};\n\nreturn (\n  <Container>\n    {isLoading && <ThreeDots color=\"#eead71\" height={60} width={60} />}\n    <Section>      \n      {swipeMovies.length !== 0 && (\n        <>\n          <Title>Upcoming</Title>\n          <Slider movies={swipeMovies}/>\n        </>)}\n      {movies.length !== 0 &&(\n        <>\n          <Title>Trending</Title>\n          <MoviesGallery movies={movies}/>\n        </>)}\n      {!isLoading && movies.length >= 20 && \n        <Button onClick={handleLoadMore} icon={<TiArrowSync/>}>\n          Load more\n        </Button>}\n    </Section>\n  </Container>\n  );\n};\n\nexport default Home;"],"names":["useState","movies","setMovies","swipeMovies","setSwipeMovies","page","setPage","genres","setGenres","isLoading","setIsLoading","useEffect","API","toast","results","newMovies","dataMovie","swipeData","prevState","color","height","width","length","onClick","icon"],"sourceRoot":""}