{"version":3,"file":"static/js/927.4ecabe53.chunk.js","mappings":"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","sources":["components/Reviews/ReviewItem.jsx","services/getAvatarLink.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { breakpoints } from \"styleConfig/breakpoints\";\nimport { getAvatarLink } from \"services/getAvatarLink\";\n\nconst Wrapper = styled.div`\npadding: 0 ${p => p.theme.space[2]}px ${p => p.theme.space[2]}px;\nmargin: 0 ${p => p.theme.space[1]}px ${p => p.theme.space[1]}px;\n`;\nconst Author = styled.div`\ndisplay: flex;\nalign-items: center;\n`;\nconst Avatar = styled.img`\nwidth: 45px;\nheight: 45px;\nborder-radius: ${p => p.theme.radii.round};\nbackground-color: ${p => p.theme.colors.black};\n`;\nconst NoAvatar = styled.div`\nwidth: 45px;\nheight: 45px;\nborder-radius: ${p => p.theme.radii.round};\nbackground-color: ${p => p.theme.colors.shadow};\n`;\nconst AuthorName = styled.span`\nmargin-left: ${p => p.theme.space[4]}px;\ntext-transform: uppercase;\ncolor: ${p => p.theme.colors.accent};\nfont-size: ${p => p.theme.fontSizes.s};\nfont-weight: ${p => p.theme.fontWeights.bold};\n`;\nconst UpdatedDateAt = styled.span`\nmargin-left: ${p => p.theme.space[2]}px;\ntext-transform: uppercase;\ncolor: ${p => p.theme.colors.shadow};\nfont-size: ${p => p.theme.fontSizes.s};\nfont-weight: ${p => p.theme.fontWeights.normal};\n`;\nconst Text = styled.p`\nfont-size: ${p => p.theme.fontSizes.s};\nfont-weight: ${p => p.theme.fontWeights.normal};\nline-height: 1.8;\n@media (${breakpoints.laptop}) {\n  font-size: ${p => p.theme.fontSizes.m};\n};\n`;\n\nexport const ReviewItem = ({author, content, author_details, updated_at}) => {\n  const avatar = author_details.avatar_path;\n  const date = updated_at.slice(0,10);\n  return (\n    <Wrapper>\n      <Author>\n      {avatar ? <Avatar src={getAvatarLink(avatar)} /> : <NoAvatar />}\n        <AuthorName>{author}</AuthorName>\n        <UpdatedDateAt>{date}</UpdatedDateAt>\n      </Author>\n      <Text>{content}</Text>\n    </Wrapper>\n  );\n};\n\nReviewItem.propTypes = {\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n};","export const getAvatarLink = (link) => {\n  if(!link) return '';\n  if(link.includes('http'))return link.substring(1);\n  return `https://themoviedb.org/t/p/w45${link}`;\n};","import { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport { toast } from 'react-toastify';\nimport * as API from \"services/movieApi\";\nimport { ReviewItem } from \"./ReviewItem\";\n\nconst ReviewsList = styled.ul`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\njustify-content: center;\n`;\nconst Notification = styled.p`\npadding: ${p => p.theme.space[2]}px;\nfont-size: ${p => p.theme.fontSizes.l};\nfont-weight: ${p => p.theme.fontWeights.semibold};\nfont-family: ${p => p.theme.fonts.accent};\nfont-style: italic;\nmargin: 0 auto;\n`;\n\nconst Review = () => {\nconst [reviews, setReviews] = useState([]);\nconst { movieId } = useParams();\n\nuseEffect(() => {\n  (async () => {\n    try {\n      const {data} = await API.getMovieReviews(movieId);\n        setReviews(data.results);\n    } catch (error) {\n      toast.info(`Something went wrong ${error}`);\n    };\n  })();\n}, [movieId]);\n\nreturn (\n  <ReviewsList>\n    {reviews.length > 0 ? (\n    reviews.map((item) => (\n      <li key={item.id}>\n        <ReviewItem {...item}/>\n      </li>\n      ))\n    ) : <Notification>No Reviews</Notification>\n    }\n  </ReviewsList>\n  );\n};\n\nexport default Review;"],"names":["Wrapper","styled","p","theme","space","Author","Avatar","radii","round","colors","black","NoAvatar","shadow","AuthorName","accent","fontSizes","s","fontWeights","bold","UpdatedDateAt","normal","Text","breakpoints","m","ReviewItem","link","author","content","author_details","updated_at","avatar","avatar_path","date","slice","src","includes","substring","ReviewsList","Notification","l","semibold","fonts","useState","reviews","setReviews","movieId","useParams","useEffect","API","data","results","toast","length","map","item","id"],"sourceRoot":""}