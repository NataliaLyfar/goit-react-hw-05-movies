{"version":3,"file":"static/js/512.2b3dfbf3.chunk.js","mappings":"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","sources":["api/api.js","constants/constantsApi.js","api/addRating.js","api/getGenres.js","api/getMovieBySearch.js","api/getMovieCast.js","api/getMovieDetails.js","api/getMovieReviews.js","api/getMovieTrailer.js","api/getNowPlaying.js","api/getSimilarMovie.js","api/getPopular.js","api/getTopRated.js","api/getTrends.js","api/getUpcoming.js","components/MoviesGallery/MovieCard.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Swiper/SwiperCard.jsx","components/Swiper/Swiper.jsx","components/ui/Section.js","components/ui/Title.js","components/ui/buttons/BackButton.jsx","components/ui/buttons/Button.jsx","utils/dataMovie.js"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_URL, API_KEY } from \"constants\";\n\nexport const customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '3dd39359792eb7041e93855d90b9b314';","import { customAxios } from \"./api\";\n\nexport const addRating = async(id, rating) => {\n  const { data } = await customAxios.post(`/movie/${id}/${rating}`);\n  return data;\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\nexport const getGenres = async () => {\n  try {\n    const { data } = await customAxios.get('/genre/movie/list');\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import * as API from \"./api\";\nimport { toast } from \"react-toastify\";\n\n  \nexport const getMovieBySearch = async (query, page) => {\n  try {\n    const data = await API.customAxios.get(`/search/movie?query=${query}&page=${page}`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\nexport const getMovieCast = async (id) => {\n  try {\n    const data = await customAxios.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n \nexport const getMovieDetails = async (id) => {\n  try {\n    const { data } = await customAxios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\nexport const getMovieReviews = async (id) => {\n  try {\n    const data = await customAxios.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\n\nexport const getMovieTrailer = async (id) => {\n  const { data } = await customAxios.get(`/movie/${id}/videos`);\n  return data;\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\nexport const getNowPlaying = async () => {\n  try {\n    const data = customAxios.get(`/movie/now_playing`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\nexport const getSimilarMovie = async (id) => {\n  try {\n    const data = await customAxios.get(`/movie/${id}/similar`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\n\nexport const getPopular = async () => {\n  try {\n    const data = customAxios.get(`/movie/popular`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\n\nexport const getTopRated = async () => {\n  try {\n    const data  = customAxios.get(`/movie/top_rated`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import * as API from \"./api\";\nimport { toast } from \"react-toastify\";\n\n\nexport const getTrends = async (page) => {\n  try {\n    const {data} = await API.customAxios.get(`/trending/movie/week?page=${page}`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\n\nexport const getUpcoming = async () => {\n  try {\n    const { data } = await customAxios.get(`/movie/upcoming`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import NoPoster from 'asset/comingSoon.jpg';\nimport styled from 'styled-components';\n\nconst CardWrapper = styled.div`\nposition: relative;\nheight: 100%;\nborder-radius: ${p => p.theme.radii.normal};\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\nbackground: transparent;\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0px 0px 8px 6px ${p => p.theme.colors.accent};\n  };\n`;\nconst Poster = styled.img`\nwidth: 100%;\nheight: 405px;\nborder-radius: ${p => p.theme.radii.normal};\n`;\nconst MovieInfo = styled.div`\npadding: ${p => p.theme.space[2]}px;\n`;\nconst Title = styled.p`\ncolor: ${p => p.theme.colors.accent};\nfont-size: ${p => p.theme.fontSizes.xs};\ntext-transform: uppercase;\nmargin-bottom: ${p => p.theme.space[1]}px;\n`;\nconst Genres = styled.div`\ncolor: ${p => p.theme.colors.accent};\nfont-size: ${p => p.theme.fontSizes.xs};\n`;\nconst Rating = styled.span`\nposition: absolute;\ntop: ${p => p.theme.space[0]}px;\nright: ${p => p.theme.space[0]}px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 36px;\nheight: 20px;\nfont-weight: ${p => p.theme.fontWeights.semibold};\nfont-size: ${p => p.theme.fontSizes.xs};\nline-height: 1.17;\ntext-transform: uppercase;\nbackground-color: ${p => p.theme.colors.accent};\ncolor: ${p => p.theme.colors.primary};\nborder-radius: 5px;\n`;\n\nexport const MovieCard = ({\n  rating, \n  title, \n  posterPath, \n  genres, \n  year\n}) => {\nreturn (\n    <CardWrapper>\n      <Rating>{rating}</Rating>\n      {posterPath ? \n        <Poster src={`https://themoviedb.org/t/p/w342${posterPath}`} alt=\"poster\"/>\n        : <Poster src={NoPoster} alt={title}/>}\n      <MovieInfo>\n        <Title>{title}</Title>\n        <Genres><span>{genres}</span><span> | {year}</span></Genres> \n      </MovieInfo>    \n    </CardWrapper>\n  );\n};","import { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { MovieCard } from \"./MovieCard\";\n\n\nconst MoviesList = styled.ul`\ndisplay: grid;\nmax-width: calc(100vw - 32px);\ngrid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\ngrid-gap: ${p => p.theme.space[5]}px;\nmargin: 0 auto ${p => p.theme.space[4]}px;\npadding: 0;\n`;\nconst Item = styled.li`\npadding: 0;\nborder-radius: ${p => p.theme.radii.small};\nbox-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n  0px 2px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesList>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{from: location}}>\n          <MovieCard {...movie}/>\n          </Link>\n        </Item>)\n      )}\n    </MoviesList>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string,\n    genres: PropTypes.string,\n    rating: PropTypes.number,\n    year: PropTypes.any,\n    })\n  ),\n};","import NoPoster from 'asset/comingSoon.jpg';\nimport styled from 'styled-components';\n\n\nconst CardWrapper = styled.div`\nborder-radius: ${p => p.theme.radii.normal};\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\nbackground: transparent;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0px 0px 8px 6px ${p => p.theme.colors.accent};\n  };\n`;\nconst Poster = styled.img`\nwidth: 180px;\nborder-radius: ${p => p.theme.radii.normal};\n`;\n\n\nexport const SwiperCard = ({title, poster_path}) => {\nreturn (\n    <CardWrapper>\n      {poster_path ? \n        <Poster src={`https://themoviedb.org/t/p/w342${poster_path}`} alt=\"poster\"/>\n        : <Poster src={NoPoster} alt={title}/>}    \n    </CardWrapper>\n  );\n};","import { Virtual, Autoplay, Navigation } from 'swiper';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport 'swiper/css/bundle';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport styled from 'styled-components';\nimport { SwiperCard } from './SwiperCard';\n\n\nconst SwiperWrapper = styled.div`\nmargin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Slider = ({movies}) => {\n  const location = useLocation();\n\n  return(\n    <SwiperWrapper>\n      <Swiper modules={[Virtual, Autoplay, Navigation]}\n        spaceBetween={5}\n        slidesPerView={6}\n        autoplay={{\n          delay: 2500,\n          disableOnInteraction: false,\n          }}\n        navigation={true}\n        virtual>\n        {movies.filter(movie => movie.poster_path).map(movie => {\n          return (\n            <SwiperSlide key={movie.id} virtualIndex={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{from: location}}>\n                <SwiperCard {...movie}/>\n              </Link>\n            </SwiperSlide>\n          );\n        })}  \n    </Swiper>\n    </SwiperWrapper>\n  );\n};\n\nSwiper.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    })\n  ),\n};","import styled from \"styled-components\";\nimport { breakpoints } from \"styleConfig/breakpoints\";\n\nexport const Section = styled.section`\npadding: ${p => p.theme.space[11]}px 0 ${p => p.theme.space[5]}px;\n  @media (${breakpoints.tablet}){\n    padding-top: ${p => p.theme.space[9]}px;\n  };\n  @media (${breakpoints.laptop}){\n    padding-top: ${p => p.theme.space[10]}px;\n  };\n`;","import styled from 'styled-components';\n\nexport const Title = styled.h3`\npadding-bottom: ${p => p.theme.space[2]}px;\nfont-size: ${p => p.theme.fontSizes.xl};\nfont-weight: ${p => p.theme.fontWeights.semibold};\nfont-family: ${p => p.theme.fonts.accent};\nfont-style: italic;\ncolor: ${p => p.theme.colors.white};\n`;\n\n","import PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport { TiArrowBack } from \"react-icons/ti\";\n\n\nconst Button = styled.button`\ndisplay: inline-flex;\nmargin: -${p => p.theme.space[6]}px 0 ${p => p.theme.space[1]}px;\nborder-radius: ${p => p.theme.radii.normal};\nbackground-color: transparent;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\noutline: none;\nborder: none;\n  svg {\n    color: ${p => p.theme.colors.accent};\n    width: 35px;\n    height: 35px;\n  };\n  &:hover, &:focus {\n    cursor: pointer;\n    svg{\n      color: ${p => p.theme.colors.tertiary};\n    };\n  };\n`;\n\nexport const BackButton = ({onClick}) => {\nreturn (\n    <Button type='button' onClick={onClick}><TiArrowBack/></Button>\n  );\n};\n\nBackButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n };","import PropTypes from 'prop-types';\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\nmargin: 0 auto;\npadding: ${p => p.theme.space[1]}px ${p => p.theme.space[1]}px;\nborder-radius: ${p => p.theme.radii.large};\nbackground: rgb(16,29,26);\nbackground: linear-gradient(90deg, rgba(16,29,26,1) 0%, rgba(28,73,58,1) 33%, rgba(16,57,56,1) 77%, rgba(14,70,54,1) 100%);\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ncolor: ${p => p.theme.colors.accent};\nborder: 0;\ntext-decoration: none;\ncursor: pointer;\nfont-family: inherit;\nfont-size: ${p => p.theme.fontSizes.m};\nline-height: ${p => p.theme.space[5]}px;\nfont-style: normal;\nfont-weight: ${p => p.theme.fontWeights.semibold};\nwidth: 150px;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  svg {\n    width: 30px;\n    height: 30px;\n    margin-left: ${p => p.theme.space[1]}px;\n  };\n  &:hover,\n  &:focus {\n    outline: none;\n    background: #D5D8A8;\n    color: ${p => p.theme.colors.secondary};\n    box-shadow: 0 2px 8px rgba(210, 105, 30, 0.7), inset 0 1px rgba(81, 50, 50, 0.3),\n      inset 0 10px rgba(255, 255, 255, 0.2), inset 0 10px 20px rgba(117, 49, 49, 0.25),\n      inset 0 -15px 30px rgba(210, 105, 30, 0.7);\n  };\n`;\n\nexport const Button = ({onClick, children, icon}) => {\n  return <StyledButton type=\"button\" onClick={onClick}>{children}{icon}</StyledButton>\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.string.isRequired,\n };","export const dataMovie = (movies, allGenres) => {\n  return movies.map(movie => ({\n    ...movie,\n    posterPath: movie.poster_path,\n    year: movie.release_date ? parseInt(movie.release_date) : '',\n    rating: movie.vote_average,\n    genres: movie.genre_ids\n      .map(id => allGenres.find(el => el.id === id)?.name)\n      .slice(0, 3).join(', '),\n  }));\n};\n"],"names":["customAxios","axios","baseURL","params","api_key","addRating","id","rating","post","data","getGenres","get","toast","getMovieBySearch","query","page","API","getMovieCast","getMovieDetails","getMovieReviews","getMovieTrailer","getNowPlaying","getSimilarMovie","getPopular","getTopRated","getTrends","getUpcoming","CardWrapper","styled","p","theme","radii","normal","colors","accent","Poster","MovieInfo","space","Title","fontSizes","xs","Genres","Rating","fontWeights","semibold","primary","MovieCard","title","posterPath","genres","year","src","alt","NoPoster","MoviesList","Item","small","MoviesGallery","movies","location","useLocation","map","movie","to","state","from","SwiperCard","poster_path","SwiperWrapper","Slider","modules","Virtual","Autoplay","Navigation","spaceBetween","slidesPerView","autoplay","delay","disableOnInteraction","navigation","virtual","filter","virtualIndex","Swiper","PropTypes","Section","breakpoints","xl","fonts","white","Button","tertiary","BackButton","onClick","type","StyledButton","large","m","secondary","children","icon","dataMovie","allGenres","release_date","parseInt","vote_average","genre_ids","find","el","name","slice","join"],"sourceRoot":""}