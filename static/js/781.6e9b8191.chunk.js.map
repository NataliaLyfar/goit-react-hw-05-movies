{"version":3,"file":"static/js/781.6e9b8191.chunk.js","mappings":"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","sources":["api/api.js","constants/constantsApi.js","api/addRating.js","api/getGenres.js","api/getMovieBySearch.js","api/getMovieCast.js","api/getMovieDetails.js","api/getMovieReviews.js","api/getMovieTrailer.js","api/getNowPlaying.js","api/getSimilarMovie.js","api/getPopular.js","api/getTopRated.js","api/getTrends.js","api/getUpcoming.js","components/CastList/CastItem.jsx","components/CastList/CastList.jsx","pages/MovieInDetails/CastView.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_URL, API_KEY } from \"constants\";\n\nexport const customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '3dd39359792eb7041e93855d90b9b314';","import { customAxios } from \"./api\";\n\nexport const addRating = async(id, rating) => {\n  const { data } = await customAxios.post(`/movie/${id}/${rating}`);\n  return data;\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\nexport const getGenres = async () => {\n  try {\n    const { data } = await customAxios.get('/genre/movie/list');\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import * as API from \"./api\";\nimport { toast } from \"react-toastify\";\n\n  \nexport const getMovieBySearch = async (query, page) => {\n  try {\n    const data = await API.customAxios.get(`/search/movie?query=${query}&page=${page}`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\nexport const getMovieCast = async (id) => {\n  try {\n    const data = await customAxios.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n \nexport const getMovieDetails = async (id) => {\n  try {\n    const { data } = await customAxios.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\nexport const getMovieReviews = async (id) => {\n  try {\n    const data = await customAxios.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\n\nexport const getMovieTrailer = async (id) => {\n  const { data } = await customAxios.get(`/movie/${id}/videos`);\n  return data;\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\nexport const getNowPlaying = async () => {\n  try {\n    const data = customAxios.get(`/movie/now_playing`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\nexport const getSimilarMovie = async (id) => {\n  try {\n    const data = await customAxios.get(`/movie/${id}/similar`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\n\nexport const getPopular = async () => {\n  try {\n    const data = customAxios.get(`/movie/popular`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\n\nexport const getTopRated = async () => {\n  try {\n    const data  = customAxios.get(`/movie/top_rated`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import * as API from \"./api\";\nimport { toast } from \"react-toastify\";\n\n\nexport const getTrends = async (page) => {\n  try {\n    const {data} = await API.customAxios.get(`/trending/movie/week?page=${page}`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\n\nexport const getUpcoming = async () => {\n  try {\n    const { data } = await customAxios.get(`/movie/upcoming`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 150px;\nbox-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\npadding-bottom: ${p => p.theme.space[2]}px;\n`;\nconst Photo = styled.img`\nborder-radius: ${p => p.theme.radii.small};\nwidth: 100%;\n`;\nconst Title = styled.h4`\nmargin-top: ${p => p.theme.space[0]}px;\ncolor: ${p => p.theme.colors.accent};\nfont-size: ${p => p.theme.fontSizes.s};\n`;\nconst Subtitle = styled.p`\nmargin-top: ${p => p.theme.space[0]}px;\nfont-size: ${p => p.theme.fontSizes.xs};\nfont-weight: ${p => p.theme.fontWeights.semibold};\n`;\n\nexport const CastItem = ({name, character, profile_path}) => {\n  return (\n    <Wrapper>\n      <Photo src={`https://themoviedb.org/t/p/w185${profile_path}`} alt={name} />\n      <Title>{name}</Title>\n      <Subtitle>{character}</Subtitle>\n    </Wrapper>\n  );   \n};\n\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { CastItem } from \"./CastItem\";\n\nconst List = styled.ul`\ndisplay: flex;\njustify-content: center;\nflex-wrap: wrap;\n`;\n\nconst Item = styled.li`\nmargin: ${p => p.theme.space[2]}px;\n`;\n\nexport const CastList = ({ casts }) => {\n  return (\n    <List>\n      {casts.length > 0 ? (\n        casts.filter(item => item.profile_path).map((item) => (\n          <Item key={item.id}>\n            <CastItem {...item} />\n          </Item>\n        ))\n      ) : (\n        <div>\n          <p>Sorry, no cast available</p>\n        </div>\n      )}\n    </List>\n  );\n};\n\nCastList.propTypes = {\n  casts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string,\n      character: PropTypes.string,\n    })\n  ),\n};","import { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { ThreeDots } from  'react-loader-spinner';\nimport { getMovieCast } from \"api\";\nimport { CastList } from \"components/CastList\";\n\n\nconst CastView = () => {\nconst [casts, setCast] = useState([]);\nconst { movieId } = useParams();\nconst [isLoading, setIsLoading] = useState(false);\n\nuseEffect(() => {\n  (async () => {\n    try {\n      setIsLoading(true);\n      const {data} = await getMovieCast(movieId);\n      setCast(data.cast);\n      } catch (error) {\n        toast.info(`Something went wrong ${error}`);\n      } finally {setIsLoading(false)};\n    })();\n}, [movieId]);\n\n  return (\n    <>\n      {isLoading && <ThreeDots color=\"#eead71\" height={60} width={60} />}\n      <CastList casts={casts} />\n    </>\n  ); \n};\n\nexport default CastView;"],"names":["customAxios","axios","baseURL","params","api_key","addRating","id","rating","post","data","getGenres","get","toast","getMovieBySearch","query","page","API","getMovieCast","getMovieDetails","getMovieReviews","getMovieTrailer","getNowPlaying","getSimilarMovie","getPopular","getTopRated","getTrends","getUpcoming","Wrapper","styled","p","theme","space","Photo","radii","small","Title","colors","accent","fontSizes","s","Subtitle","xs","fontWeights","semibold","CastItem","name","character","profile_path","src","alt","List","Item","CastList","casts","length","filter","item","map","useState","setCast","movieId","useParams","isLoading","setIsLoading","useEffect","cast","color","height","width"],"sourceRoot":""}